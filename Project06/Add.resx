<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>